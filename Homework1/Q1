try {
    public class Fib {
        private int f0;
        private int f1;
    
        public Fib(int f0, int f1) {
            this.f0 = f0;
            this.f1 = f1;
        }
        public int calculateFibonacci(int n, boolean iterative) {
            if (n < 0) {
                throw new IllegalArgumentException("n must be non-negative");
            }
            if (n == 0) return f0;
            if (n == 1) return f1;
    
            int prev1 = f0;
            int prev2 = f1;
            int current = 0;
    
            if (iterative) {
                for (int i = 2; i <= n; i++) {
                    current = prev1 + prev2;
                    prev1 = prev2;
                    prev2 = current;
                }
            } else {
                current = calculateFibonacci(n - 1, false) + calculateFibonacci(n - 2, false);
            }
    
            return current;
        }
    
        public static void main(String[] args) {
            if (args.length != 3) {
                System.out.println("Usage: java Fib <F(0)> <F(1)> <n>");
                return;
            }
    
            int f0 = Integer.parseInt(args[0]);
            int f1 = Integer.parseInt(args[1]);
            int n = Integer.parseInt(args[2]);
    
            Fib fib = new Fib(f0, f1);
    
            System.out.println("Fibonacci Series (Iterative):");
            for (int i = 0; i <= n; i++) {
                System.out.print(fib.calculateFibonacci(i, true) + " ");
            }
            System.out.println();
    
            System.out.println("Fibonacci Series (Recursive):");
            for (int i = 0; i <= n; i++) {
                System.out.print(fib.calculateFibonacci(i, false) + " ");
            }
            System.out.println();
        }
    }
} catch (Exception e) {
}
